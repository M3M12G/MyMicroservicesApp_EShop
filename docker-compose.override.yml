version: '3.4'

services:
    catalogdb:
        container_name: catalogdb
        restart: always
        volumes:
            - ${WEBAPP_STORAGE_HOME}/site:/data/db
        ports:
            - "27017:27017"

    catalog.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - "CatalogDatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
        depends_on:
            - catalogdb
        volumes:
            - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
            - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
            - "8000:80"

    basketdb:
        container_name: basketdb
        restart: always
        ports:
            - "6379:6379"
        volumes:
            - ${WEBAPP_STORAGE_HOME}/site:/data/db

    rabbitmq:
        hostname: rabbitmq
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"

    basket.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - "ConnectionStrings:Redis=basketdb:6379"
            - "EventBus:HostName=rabbitmq"
        ports:
            - "8001:80"
        depends_on:
            - basketdb
            - rabbitmq
        volumes:
            - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
            - ${HOME}/.aspnet/https:/root/.aspnet/https/

    orderingdb:
        image: postgres
        container_name: orderingdb
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: app@con123
            POSTGRES_DB: OrderDb
        ports:
            - "5432:5432"

    ordering.api:
        depends_on:
            - orderingdb
            - rabbitmq
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - "ConnectionStrings:DefaultConnection=Server=orderingdb;Port=5432;Database=OrderDb;Username=postgres;Password=app@con123"
            - "EventBus:HostName=rabbitmq"
        ports:
            - "5001:80"
        volumes:
            - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ocelotapigateway:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        container_name: apigateway
        depends_on:
            - catalog.api
            - basket.api
            - ordering.api
        volumes:
            - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
            - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
            - "7000:80"

    shoppingweb:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - "ApiSettings:BaseAddress=http://apigateway:80"
            - "gRPC_Settings:Discount_gRPC_URL=http://discount_grpc"
        depends_on:
            - catalog.api
            - basket.api
            - ordering.api
            - ocelotapigateway
        volumes:
            - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
            - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
            - "7007:80"
    
    discountdb:
        container_name: discountdb
        restart: always
        volumes:
            - ${WEBAPP_STORAGE_HOME}/site:/data/db/promo
        ports:
            - "27018:27017"
            
    discount_grpc:
        container_name: discount_grpc
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - "PromoCodeDBSettings:ConnectionString=mongodb://discountdb:27018"
        depends_on:
            - discountdb
        volumes:
            - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
            - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
            - "3333:80"